replicaCount: 1

image:
  repository: snowdreamtech/frps
  tag: latest # https://hub.docker.com/r/snowdreamtech/frps/tags
  pullPolicy: IfNotPresent
serviceMonitor:
  enable: false

# https://github.com/fatedier/frp/blob/dev/conf/frps_full_example.toml
configInline: |
  bindPort = 80
  kcpBindPort = 80
  vhostHTTPPort = 80
  vhostHTTPSPort = 443
  webServer.addr = "0.0.0.0"
  webServer.port = 7500
  webServer.user = "admin"
  webServer.password = "admin"
  enablePrometheus = true

configSecretName: ""
envSecretName: ""

ports:
  http:
    port: 80
    servicePort: 80
    protocol: TCP
    ingresses:
    - name: "default-ingress"
      enabled: false
      annotations: { }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      hosts:
      - host: chart-example.local
        paths: [ ]
      tls: [ ]
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

  https:
    port: 443
  quic:
    port: 7001
    protocol: UDP
  kcp:
    port: 80
    protocol: UDP
  dashboard:
    port: 7500
    ingress:
      name: "default-dashboard-ingress"
      enabled: false
      annotations: { }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      hosts:
      - host: dashboard.chart-example.local
        paths: [ ]
      tls: [ ]
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

service:
  type: ClusterIP
  # type: LoadBalancer
  # loadBalancerIP: 0.0.0.0

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000


resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }
